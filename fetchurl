#!/bin/sh
#
# Small utility to fetch and unpack urls (with cache)
#
# Depends on : wget, tar
#

set -e
set +u

# ENV vars, inherited from external
CACHE=${CACHE:-1}
UNPACK=${UNPACK:-1}
VERBOSE=${VERBOSE:-0}

TARGET_DIR=${TARGET_DIR:-`pwd`}
if [ -n "$HOME" ]; then
  CACHE_DIR=${CACHE_DIR:-$HOME/.cache/fetchurl}
else
  CACHE_DIR=${CACHE_DIR:-}
fi
TMP_DIR=${TMP_DIR:-/tmp}

URL=$1

set -u

stderr () {
  echo $@ 1>&2
}

sh () {
  echo $ $@
  if [ "$VERBOSE" -ne 0 ]; then
    $@
  else
    $@ >/dev/null 2>&1
  fi
}

usage() {
  echo "Usage: fetchurl url"
  echo "CACHE=${CACHE}"
  echo "UNPACK=${UNPACK}"
  echo "VERBOSE=${VERBOSE}"

  echo "TARGET_DIR=${TARGET_DIR}"
  echo "CACHE_DIR=${CACHE_DIR}"
  echo "TMP_DIR=${TMP_DIR}"

  echo "URL=${URL}"
  exit 1
}

if [ -z "$URL" ]; then
  stderr "ERROR: missing url"
  usage
fi

if [ -z "$CACHE_DIR" ] && [ "$CACHE" -ne 0 ]; then
  stderr "ERROR: missing cache dir"
  usage
fi

filename=`basename "$URL" | sed 's/\\\?.*//'`
tmp_file="$TMP_DIR/$filename"
cache_file="$CACHE_DIR/$filename"

mkdir -p "$CACHE_DIR"

# Fetch
if [ "$CACHE" -eq 0 ] || [ ! -f "$cache_file" ]; then
  rm -rf "$tmp_file"
  sh curl -L -o "$tmp_file" "$URL"
  sh mv "$tmp_file" "$cache_file"
fi

# TODO: checksums

# Unpack
if [ "$UNPACK" -ne 0 ]; then
  extname=`echo "$filename" | sed 's/.*\(\.tar\.gz\|\.tgz\|\.tar\.bz2\)$/\1/'`
  bname=`basename "$filename" "$extname"`  
  target_dir=`readlink -f "$TARGET_DIR"`

  mkdir -p "$target_dir"
  sh cd "$target_dir"
  
  case "$extname" in
    .tar.gz|.tgz)    
      sh tar xzvf "$cache_file"
    ;;
    .tar.bz2)
      sh tar xjvf "$cache_file"
    ;;
    *)
      stderr $extname extension not supported
      exit 1
    ;;
  esac
fi

